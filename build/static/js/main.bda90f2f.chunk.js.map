{"version":3,"sources":["img/loading.gif","img/fruits.jpg","img/ice-cream.jpg","img/beverages.jpg","Authentication/Firebase.js","Authentication/auth.js","Dashboard/AdminDashboard.js","Dashboard/UserDashboard.js","Dashboard/dashboard.js","Authentication/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","SignOut","e","preventDefault","signOut","then","res","alert","icon","window","location","replace","catch","err","message","login","email","document","getElementById","pass","signInWithEmailAndPassword","value","console","log","AdminDashboard","React","Component","UserDashboard","className","station_Num","costomers","img","fruitImg","title","icecream","beverages","Station","props","color","findColor","style","fontFamily","width","height","viewBox","fill","xmlns","cx","cy","rx","ry","d","fontSize","class","src","alt","costumers","Dashboard","state","userType","collection","doc","this","userInfo","uid","get","exists","data","type","setState","isAuthenticated","border","textAlign","onClick","Login","id","placeholder","App","path","render","exact","onAuthStateChanged","user","Loader","display","LoadingImg","margin","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bda90f2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.0344471d.gif\";","module.exports = __webpack_public_path__ + \"static/media/fruits.f361caf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ice-cream.38b03f6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beverages.deb3f23c.jpg\";","import firebase from 'firebase';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyANX6lQpWz0MxqECqVCOxaLfCGvKxS53S0\",\n  authDomain: \"university-cafe.firebaseapp.com\",\n  databaseURL: \"https://university-cafe.firebaseio.com\",\n  projectId: \"university-cafe\",\n  storageBucket: \"university-cafe.appspot.com\",\n  messagingSenderId: \"300279181194\",\n  appId: \"1:300279181194:web:b31020494a3f387aa8e273\",\n  measurementId: \"G-G9CSSBLHDQ\"\n  };\nexport default firebase.initializeApp(firebaseConfig);\n","// import firebase from \"./firebase\"\nimport firebase from './Firebase'\nexport const auth = firebase.auth();\n// import { db } from \"./firestore\";\nexport const db = firebase.firestore();\n\n// var nameForDB, emailForDB;\n// user Sign Up  \nconst ClearField = () => {\n\n}\nexport const Register = (e) => {\n    e.preventDefault();\n    var email = document.getElementById(\"reg-email\").value;\n    var pass = document.getElementById(\"reg-password\").value;\n    var type = document.getElementById(\"reg-type\").value;\n    if ((email.length && pass.length ) !== 0) {\n        auth.createUserWithEmailAndPassword(email, pass)\n            .then(async (user) => {\n                await db.collection(\"Users\").doc(auth.currentUser.uid).set({\n                    email: email.value,\n                    id: auth.currentUser.uid\n                })\n                    .then(res => {\n                        alert(`Your Account Has Been Created Successfully !!`)\n                        SignOut();\n                        return ClearField()\n                    })\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n    } else {\n        alert('field is empty!!')\n    }\n}\n\n// USer Sign Out\nexport const SignOut = (e) => {\n    e.preventDefault();\n    auth.signOut().then(res => {\n        alert('You\\'re Logged Out Successfully', {\n            icon: 'success'\n        });\n        window.location.replace(\"/\");\n    }).catch(err => {\n        alert(err.message);\n    })\n}\n\n// User login \nexport const login = (e) => {\n    e.preventDefault();\n    const email = document.getElementById(\"login-email\");\n    const pass = document.getElementById(\"login-pass\");\n    auth.signInWithEmailAndPassword(email.value, pass.value)\n        .then(res => {\n            window.location.replace('/dashboard')\n                console.log(res);\n        }).catch(err => {\n            alert(err.message);\n        });\n}\n","import React from 'react'\n\nclass AdminDashboard extends React.Component {\n  render(){\n    return(\n      <div>\n        Admin Dashboard Here \n      </div>\n    )\n  }\n}\n\nexport default AdminDashboard","import React from 'react'\nimport fruitImg from '../img/fruits.jpg'\nimport icecream from '../img/ice-cream.jpg'\nimport beverages from '../img/beverages.jpg';\n\nclass UserDashboard extends React.Component {\n  render(){\n    return(\n    <div className=\"flex flex-col lg:flex-row items-stretch min-h-screen text-center\">\n      <Station station_Num={1} costomers={3} img= {fruitImg} title={\"Fruits\"}/>\n      <Station station_Num={2} costomers={1} img= {icecream} title={\"Ice Cream\"}/>\n      <Station station_Num={3} costomers={4} img= {beverages} title={\"Beverages\"}/>\n    </div>  \n    )\n  }\n}\n\nconst Station = props => {\n  var color = findColor(props.costomers);\n    return (\n        <div className={\"w-full lg:w-1/3 text-white transition border-l border-white \" + color}>\n          <div className=\"h-full p-6\">\n            <h1 style={{color: \"#0023b4\" , fontFamily: \"Source Sans Pro,sans-serif\"}} className=\"font-bold text-5xl bg-white capitalize rounded-lg mb-4\">Station {props.station_Num}</h1>\n            <div className=\"flex flex-col items-center justify-center bg-white rounded-lg p-2\">\n              <div className={\"flex flex-row m-2 rounded-lg w-full items-stretch \" + color}>\n                <div className=\"w-1/3 border-r border-white flex items-center justify-center\">\n                  <svg width=\"70\" height=\"110\" viewBox=\"0 0 70 110\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <ellipse cx=\"27.8427\" cy=\"10.5068\" rx=\"9.98142\" ry=\"10.5068\" fill=\"white\"></ellipse>\n                  <path d=\"M25.1002 66.4287H31.1647V105.564L31.5016 106.239C32.8493 108.432 34.1969 109.444 37.3976 109.106C39.9582 108.836 40.9353 107.082 41.1037 106.239V101.619V78.6477V36.9086L46.8313 47.5358C48.4485 50.6397 51.2112 51.3032 52.3904 51.2469L65.1932 50.4035C66.8104 50.1336 67.8885 49.2789 68.2254 48.8853C69.7079 47.4009 69.4046 45.118 69.0677 44.1621C68.3939 41.5981 64.9686 41.2944 63.3401 41.4631L54.2434 42.1379L48.0105 30.3298C47.3367 29.149 45.7868 26.3488 44.9782 24.5945C44.1696 22.8401 41.2836 22.1766 39.9417 22.0642H22.068H16.172C13.6114 22.0642 12.2974 23.4137 11.9605 24.0884L8.08598 31.0046L3.36916 39.9449L1.85304 42.8126C1.04444 43.8922 0.505373 45.5116 0.336916 46.1863L0 56.4762V59.6812C0 60.6259 0.22461 61.4243 0.336916 61.7055C0.875981 63.055 2.2461 63.8422 2.86378 64.0671C3.64992 64.4045 5.5928 64.7756 7.07523 63.561C8.55766 62.3465 9.04057 60.4684 9.09672 59.6812L9.43364 48.0419L15.1612 37.4146V61.5368V74.0196V100.503L15.3297 104.214C15.3297 106.778 17.0142 108.319 17.8565 108.769C18.3619 109.106 19.9117 109.612 22.068 108.938C24.2242 108.263 24.9879 105.508 25.1002 104.214V88.1384V66.4287Z\" fill=\"white\"></path>\n                  </svg>\n                </div>\n                <div className=\"w-2/3 border-l border-white text-center\">\n                  <h2 style={{fontSize: \"8rem\", fontFamily: \"Source Sans Pro,sans-serif\" }} className=\" font-bold text-white rounded-full\">{4 - props.costomers}</h2>\n                </div>\n              </div>\n                <div class=\"w-full\">\n                  <div class=\"w-full\">\n                    <div class=\"flex flex-col mb-2\">\n                      <img style={{height: '400px'}} className=\"w-full rounded-lg\" src={props.img} alt=\"\" />\n                      <h3 style={{color: \"#0023b4\" , fontFamily: \"Source Sans Pro,sans-serif\"}} class=\"flex-auto p-2 text-4xl font-bold rounded\">{props.title}</h3>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nconst findColor = costumers => {\n  switch (costumers) {\n    case 0:\n      return \"bg-green-600\"\n    case 1:\n      return \"bg-green-500\"\n    case 2:\n      return \"bg-orange-400\"\n    case 3:\n      return \"bg-orange-600\"\n    case 4:\n      return \"bg-red-600\"\n  }\n} \n\n\nexport default UserDashboard;","import React from 'react';\nimport {db, SignOut} from '../Authentication/auth'\nimport AdminDashboard from './AdminDashboard'\nimport UserDashboard from './UserDashboard'\nimport '../App.css';\n\n\nclass Dashboard extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { userType: '' }\n  }\n  componentDidMount(){\n    db.collection(\"Users\").doc(this.props.userInfo.uid).get()\n      .then(doc => {\n      if (doc.exists) {\n         if (doc.data().type === 'admin') {\n             this.setState({userType: doc.data().type});\n         }\n         else if (doc.data().type === 'user') {\n          this.setState({userType: doc.data().type});\n         }\n         else{\n             console.log(\"Neither Admin, nor User, error\");\n         }\n      } else {\n         alert('User Doesnt Exist!!!')\n      }\n    })\n  }\n  render(){\n    var {userInfo, isAuthenticated} = this.props;\n    console.log(isAuthenticated);\n    return (\n        <div className=\"login bg-lightWhite h-full lg:h-screen\">\n            Hey <b style={{color: 'blue'}}>{this.state.userType}</b> {userInfo.email}\n            <button style={{border:\"1px solid dimgrey\", textAlign: 'right'}} onClick={SignOut}>Sign out</button>\n          {this.state.userType === 'admin' ?\n            <AdminDashboard userInfo={userInfo} isAuthenticated = {isAuthenticated} />:\n            <UserDashboard />\n          }\n        </div>\n    ) \n  }\n}\n\n\n\nexport default Dashboard;\n","import React from 'react';\nimport '../App.css';\nimport { login } from './auth'\nclass Login extends React.Component{\n  render(){\n\n    return (\n        <div className=\"login bg-lightWhite h-full lg:h-screen\">\n        <svg viewBox=\"0 0 1656 320\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M455.351 149.061C1145.09 -27.4895 1536 66 1656 127.5L1656 0.0869791L0.49982 0.0869407L0.499832 204C0.499832 204 222.152 208.752 455.351 149.061Z\" fill=\"#1A3F93\">\n        </path>\n        </svg>\n        <div className=\"h-screen relative lg:absolute w-full top-0\">\n          <div className=\"relative lg:top-0 lg:right-0 p-12 lg:p-2 w-full lg:w-1/2 mx-auto h-screen flex flex-col justify-center\">\n          <div className=\"py-12 text-center rounded-lg\">\n            <img alt=\"Logo\" src=\"./img/logo.1708b5e5.svg\" className=\"mx-auto w-81\" />\n          <form className=\"w-full lg:w-2/4 mx-auto\">\n            <div className=\"mb-8 relative\">\n              <input id=\"login-email\" type=\"email\" placeholder=\"Email\" className=\"bg-lightWhite focus:outline-none p-2 border rounded focus:border-mainBlue focus:placeholder-mainBlue w-full focus:text-mainBlue transition border-gray-400 placeholder-grey-400\" />\n            </div>\n            <div className=\"mb-8 relative\">\n              <input id=\"login-pass\" type=\"password\" placeholder=\"Password\" className=\"bg-lightWhite focus:outline-none p-2 rounded border focus:border-mainBlue focus:text-mainBlue focus:placeholder-mainBlue w-full transition border-gray-400 placeholder-grey-400 text-mainBlue\" />\n            </div>\n            <div className=\"relative\">\n              <button type=\"submit\" value=\"submit\" onClick={login} className=\"btn-submit bg-mainBlue text-white py-2 px-12 rounded focus:outline-none transition\">Login</button>\n            </div>\n          </form>\n          </div>\n          </div>\n        </div>\n        </div>\n    ) \n  }\n}\n\n\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { auth }  from './Authentication/auth';\n// Components\nimport LoadingImg from './img/loading.gif'\nimport Dashboard from './Dashboard/dashboard'\nimport LogIn from './Authentication/login'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {isAuthenticated: false, userInfo: [] }\n  }\n\n  render(){\n    var {isAuthenticated, userInfo} = this.state;\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\"  render={() => <LogIn />} exact />\n          {isAuthenticated ? \n            <Route path=\"/dashboard\" render={() => <Dashboard isAuthenticated={isAuthenticated} userInfo={userInfo} /> }  />\n          : <Loader />\n            }\n          </Switch>\n        </BrowserRouter>\n      </div>\n    ) \n  }\n  componentDidMount() {     \n    auth.onAuthStateChanged((user) => { \n      if(user){\n        console.log(\"User : \" ,user);\n        this.setState({\n          isAuthenticated: true,\n          userInfo: user,\n        })\n      }else {\n        this.setState({\n          isAuthenticated: false\n        })\n      }\n    })\n  }\n}\n\n\nconst Loader = () => {\n  return <div style={{display: 'block'}} > <img src={LoadingImg} style={{ margin: \"10% auto\"}} alt='' /> </div>\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}